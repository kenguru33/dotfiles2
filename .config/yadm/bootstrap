#!/bin/bash
set -e

trap 'catch' ERR
catch() {
	echo "Bootstrapping failed!"
	kill $!
}

trap cleanUp SIGHUP SIGINT SIGTERM
cleanUp() {
	echo "cleaning up"
}

OS="$(uname -s)"
ARCH="$(uname -m)"
if [ "${OS}" == "Linux" ]; then
	DISTRO_ID=$(lsb_release -is)
fi

SUPPORTED_DEBIAN_ID=("Pop Ubuntu Debian")
SUPPORTED_REDHAT_ID=("Fedora")

HOMEBREW_PACKAGES=(
	zsh
	ripgrep
	ffind
	kitty
	tmux
	neovim
	lazugit
	volta
	rust
	golang-go
	pure
	zsh-syntax-highlighting
	zsh-autosuggestions
)

DEB_PACKAGES=(
	zsh
	build-essential
	curl
	unzip
	ripgrep
	git
	fd-find
	cargo
	golang-go
	kitty
	tmux
	zsh-syntax-highlighting
	zsh-autosuggestions
	neovim
)

RPM_PACKAGES=(
	zsh
	build-essential
	curl
	unzip
	ripgrep
	git
	fd-find
	cargo
	golang-go
	kitty
	tmux
	zsh-syntax-highlighting
	zsh-autosuggestions
	neovim
)

linuxInstall() {
	sudo echo
	if [[ " ${SUPPORTED_DEBIAN_ID[*]} " =~ ${DISTRO_ID} ]]; then
		echo -n "Preparing package installation..."
		sudo add-apt-repository ppa:neovim-ppa/stable -y &>/dev/null
		sudo apt-get update &>/dev/null
		echo " Done."

		for package in "${DEB_PACKAGES[@]}"; do
			echo -n "Installing ${package}... "
			sudo apt-get install "$package" &>/dev/null
			echo " Done."
		done

		echo -n "Installing Volta NodeJS manager..."
		curl -s https://get.volta.sh | bash -s -- --skip-setup &>/dev/null
		export VOLTA_HOME="$HOME/.volta"
		export PATH="$VOLTA_HOME/bin:$PATH"
		volta install node &>/dev/null
		echo " Done."

		echo -n "Installing LazyGit ${LAZYGIT_VERSION}..."
		LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[0-9.]+')
		curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz" &>/dev/null
		sudo tar xf lazygit.tar.gz -C /usr/local/bin lazygit &>/dev/null
		rm -rf lazygit.tar.gz
		echo " Done."

		echo -n "Installing Oh-My-Zsh..."
		if [ ! -d "${HOME}/.oh-my-zsh" ]; then
			sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --keep-zshrc --unattended &>/dev/null
			sudo -S chsh -s "/bin/zsh" "${USER}"
			echo " Done."
		else
			echo "Old installataion found. Skipping."
		fi

		echo -n "Installing Hack Nerd font..."
		wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip &>/dev/null
		unzip -o Hack.zip -d "$HOME/.local/share/fonts" &>/dev/null
		fc-cache -fv &>/dev/null
		rm Hack.zip
		echo " Done."

		echo -n "Installing Pure Prompt..."
		if [ ! -d "$HOME/.zsh" ]; then
			mkdir -p "$HOME/.zsh"
			git clone https://github.com/sindresorhus/pure.git "$HOME/.zsh/pure" &>/dev/null
			echo " Done."
		else
			echo "Old installation found. skipping."
		fi

	elif
		[[ " ${SUPPORTED_REDHAT_ID[*]} " =~ ${DISTRO_ID} ]]
	then
		echo "Redhat based distro..."
	else
		echo"Linux distro $DISTRO_ID not supported!"
	fi
}

macOsInstall() {
	echo "MacOS install"
}

if [ "$OS" == "Darwin" ]; then
	macOsInstall
elif [ "$OS" == "Linux" ]; then
	linuxInstall
else
	echo "No OS supported"
	exit 1
fi
echo "Done."
exit 0
