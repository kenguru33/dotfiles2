#!/bin/bash
set -e

trap 'catch' ERR
catch() {
	echo "Bootstrapping failed!"
	kill $!
}

trap cleanUp SIGHUP SIGINT SIGTERM
cleanUp() {
	echo "cleaning up"
}

OS="$(uname -s)"
if [ "${OS}" == "Linux" ]; then
	DISTRO_ID=$(lsb_release -is)
fi

SUPPORTED_DEBIAN_ID=("Pop Ubuntu Debian")
SUPPORTED_REDHAT_ID=("Fedora")

linuxInstall() {

	if [[ " ${SUPPORTED_DEBIAN_ID[*]} " =~ ${DISTRO_ID} ]]; then
		sudo apt-get install build-essential procps curl file git -y
		if [ -n "$XDG_CURRENT_DESKTOP" ]; then
			sudo apt-get install kitty -y
		fi
	elif
		[[ " ${SUPPORTED_REDHAT_ID[*]} " =~ ${DISTRO_ID} ]]
	then
		sudo dnf group install "C Development Tools and Libraries" "Development Tools" -y
		sudo dnf install procps-ng curl file git redhat-lsb-core -y
		if [ -n "$XDG_CURRENT_DESKTOP" ]; then
			sudo dnf install kitty -y
		fi
	else
		echo"Linux distro $DISTRO_ID not supported!"
		exit 1
	fi

	installLinuxNerdFonts
	brewBundleInstall

}

macOsInstall() {

	brewBundleInstall
	brew install kitty
	brew install font-hack-nerd-font
}

brewBundleInstall() {
	if ! command -v brew >/dev/null 2>&1; then
		echo "Installing brew..."
		NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
		eval "$(${brew_path} shellenv)"
	fi
	brew bundle --file "$(dirname "$0")/Brewfile"
}

installLinuxNerdFonts() {

	if [[ ! -f "$HOME/.local/share/fonts/Hack Regular Nerd Font Complete Mono.ttf" ]]; then
		wget -O /tmp/Hack.zip https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip
		unzip -o /tmp/Hack.zip -d "$HOME/.local/share/fonts"
		fc-cache -fv
	fi
}

selectShell() {

	PS3='Choose your favorite shell: '
	shells=("Bash" "ZSH" "Fish")
	select shell in "${shells[@]}"; do
		case $shell in
		"Bash")
			sudo chsh -s /bin/bash "$USER"
			defaultShell="bash"
			break
			;;
		"Fish")
			sudo chsh -s "$fish_path" "$USER"
			defaultShell="fish"
			break
			;;
		"ZSH")
			sudo chsh -s "$zsh_path" "$USER"
			defaultShell="zsh"
			break
			;;
		*)
			selectShell
			;;
		esac
	done
}

sudo echo

if [ "$OS" == "Darwin" ]; then
	brew_path="/opt/homebrew/bin/brew"
	macOsInstall
elif [ "$OS" == "Linux" ]; then
	brew_path="/home/linuxbrew/.linuxbrew/bin/brew"
	linuxInstall
else
	echo "This OS is not supported"
	exit 1
fi

echo "Installing volta nodejs manager..."
volta install node@lts

if [[ ! -d $HOME/.oh-my-zsh ]]; then
	sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --keep-zshrc --unattended
fi

zsh_path=$(which zsh)
if ! grep -q "^${zsh_path}$" "/etc/shells"; then
	echo "$zsh_path" | sudo tee -a /etc/shells
fi

if [[ ! -d $HOME/.local/share/omf ]]; then
	curl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install >/tmp/install
	fish /tmp/install --noninteractive
fi

fish_path=$(which fish)
if ! grep -q "^${fish_path}$" "/etc/shells"; then
	echo "$fish_path" | sudo tee -a /etc/shells
fi

# echo "stashing conflicting existing config files. To revert thus, run the command: yadm stash pop"
# yadm stash
echo "Current shell: ${SHELL} "

selectShell
$defaultShell

echo "Done."
